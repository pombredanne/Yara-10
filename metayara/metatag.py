import ctypes

"""
Structures
"""

tag_pe = [('Machine;',             0x14c,       'IMAGE_FILE_MACHINE_I386'                   ),
          ('Machine;',             0x0200,      'IMAGE_FILE_MACHINE_IA64'                   ),
          ('Machine;',             0x8664,      'IMAGE_FILE_MACHINE_AMD64'                  ),
          ('Machine;',             0x0,         'IMAGE_FILE_MACHINE_UNKNOWN'                ),
          ('Machine;',             0x1d3,       'IMAGE_FILE_MACHINE_AM33'                   ),
          ('Machine;',             0x1c0,       'IMAGE_FILE_MACHINE_ARM'                    ),
          ('Machine;',             0x1c4,       'IMAGE_FILE_MACHINE_ARMNT'                  ),
          ('Machine;',             0xaa64,      'IMAGE_FILE_MACHINE_ARM64'                  ),
          ('Machine;',             0xebc,       'IMAGE_FILE_MACHINE_EBC'                    ),
          ('Machine;',             0x200,       'IMAGE_FILE_MACHINE_IA64'                   ),
          ('Machine;',             0x9041,      'IMAGE_FILE_MACHINE_M32R'                   ),
          ('Machine;',             0x266,       'IMAGE_FILE_MACHINE_MIPS16'                 ),
          ('Machine;',             0x366,       'IMAGE_FILE_MACHINE_MIPSFPU'                ),
          ('Machine;',             0x466,       'IMAGE_FILE_MACHINE_MIPSFPU16'              ),
          ('Machine;',             0x1f0,       'IMAGE_FILE_MACHINE_POWERPC'                ),
          ('Machine;',             0x1f1,       'IMAGE_FILE_MACHINE_POWERPCFP'              ),
          ('Machine;',             0x166,       'IMAGE_FILE_MACHINE_I386'                   ),
          ('Machine;',             0x14c,       'IMAGE_FILE_MACHINE_R4000'                  ),
          ('Machine;',             0x1a2,       'IMAGE_FILE_MACHINE_SH3'                    ),
          ('Machine;',             0x1a3,       'IMAGE_FILE_MACHINE_SH3DSP'                 ),
          ('Machine;',             0x1a6,       'IMAGE_FILE_MACHINE_I386'                   ),
          ('Machine;',             0x14c,       'IMAGE_FILE_MACHINE_SH4'                    ),
          ('Machine;',             0x1a8,       'IMAGE_FILE_MACHINE_SH5'                    ),
          ('Machine;',             0x1c2,       'IMAGE_FILE_MACHINE_THUMB'                  ),
          ('Machine;',             0x169,       'IMAGE_FILE_MACHINE_WCEMIPSV2'              ),
          ('Subystem;',            0,           'IMAGE_SUBSYSTEM_UNKNOWN'                   ),
          ('Subystem;',            1,           'IMAGE_SUBSYSTEM_NATIVE'                    ),
          ('Subsystem;',           2,           'IMAGE_SUBSYSTEM_WINDOWS_GUI'               ),
          ('Subsystem;',           3,           'IMAGE_SUBSYSTEM_WINDOWS_CUI'               ),
          ('Subsystem;',           5,           'OS2_CUI'                                   ),
          ('Subsystem;',           7,           'IMAGE_SUBSYSTEM_POSIX_CUI'                 ),
          ('Subystem;',            9,           'IMAGE_SUBSYSTEM_WINDOWS_CE_GUI'            ),
          ('Subystem;',            10,          'IMAGE_SUBSYSTEM_EFI_APPLICATION'           ),
          ('Subystem;',            11,          'IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER'   ),
          ('Subystem;',            12,          'IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER'        ),
          ('Subystem;',            13,          'IMAGE_SUBSYSTEM_EFI_ROM'                   ),
          ('Subystem;',            14,          'XBOX'                                      ),
          ('Magic;',               0x10b,       'IMAGE_NT_OPTIONAL_HDR32_MAGIC'             ),
          ('Magic;',               0x20b,       'IMAGE_NT_OPTIONAL_HDR64_MAGIC+'            ),
          ('Magic;',               0x107,       'IMAGE_ROM_OPTIONAL_HDR_MAGIC+'             )]
       

_DOS_HEADER_INFO = [('e_magic', 0x5A4D,       'MZ'),
                    ('e_magic', 0x454E,       'NE'),
                    ('e_magic', 0x454C,       'LE'),
                    ('e_magic', 0x00004550,   'PE00'),]

_PE_Characteristics = [('IMAGE_FILE_RELOCS_STRIPPED',           'Relocation information was stripped from the file.'), 
                       ('IMAGE_FILE_EXECUTABLE_IMAGE',          'The file is executable'),
                       ('IMAGE_FILE_LINE_NUMS_STRIPPED',        'COFF line numbers stripped'),
                       ('IMAGE_FILE_LOCAL_SYMS_STRIPPED',       'COFF symbol table entries stripped'),
                       ('IMAGE_FILE_AGGRESSIVE_WS_TRIM',        'Aggressively trim the working set'),
                       ('IMAGE_FILE_LARGE_ADDRESS_ AWARE',      'The application can handle addresses larger than 2 GB'),
                       ('RESERVED',                             'RESERVED'),
                       ('IMAGE_FILE_BYTES_REVERSED_LO',         'The bytes of the word are reversed'),
                       ('IMAGE_FILE_32BIT_MACHINE',             'The computer supports 32-bit words'),
                       ('IMAGE_FILE_DEBUG_STRIPPED',            'Debugging information stripped'),
                       ('IMAGE_FILE_REMOVABLE_RUN_ FROM_SWAP',  'Image is on removable media, copy run from swap'),
                       ('IMAGE_FILE_NET_RUN_FROM_SWAP',         'Image is on network, copy run from swap'),
                       ('IMAGE_FILE_SYSTEM',                    'The image is a system file'),
                       ('IMAGE_FILE_DLL',                       'The image is a DLL file'),
                       ('IMAGE_FILE_UP_SYSTEM_ONLY',            'Uniprocessor computer only'),
                       ('IMAGE_FILE_BYTES_REVERSED_HI',         'The bytes of the word are reversed')]

_PE_DDLCharacteristics = [('RESERVED',                                      'Reserved'), 
                       ('RESERVED',                                         'Reserved'),
                       ('RESERVED',                                         'Reserved'),
                       ('RESERVED',                                         'Reserved'),
                       ('RESERVED',                                         'Reserved'),
                       ('RESERVED',                                         'Reserved'),
                       ('IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE',           'Address space layout randomization'),
                       ('IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY',        'Code integrity'),
                       ('IMAGE_DLL_CHARACTERISTICS_NX_COMPAT',              'Data execution prevention (DEP)'),
                       ('IMAGE_DLLCHARACTERISTICS_NO_ISOLATION',            'Image isolation '),
                       ('IMAGE_DLLCHARACTERISTICS_NO_SEH',                  'Structured exception handling (SEH)'),
                       ('IMAGE_DLLCHARACTERISTICS_NO_BIND',                 'Do not bind the image)'),
                       ('RESERVED',                                         'Reserved'),
                       ('IMAGE_DLLCHARACTERISTICS_WDM_DRIVER',              'A WDM driver'),
                       ('RESERVED',                                         'Reserved'),
                       ('IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE',   'Terminal server aware')]

_IMAGE_FILE_HEADER = [('Machine;',                 0x04,  ctypes.c_ushort,  '<H'),
                      ('NumberOfSections;',        0x06,  ctypes.c_ushort,  '<H'),
                      ('Time Date Stamp;',         0x08,  ctypes.c_uint32,  '<L'),
                      ('PointerToSymbolTable;',    0xc,   ctypes.c_uint32,  '<L'),
                      ('NumberOfSymbols;',         0x10,  ctypes.c_uint32,  '<L'),
                      ('SizeofOptionalHeader;',    0x14,  ctypes.c_ushort,  '<H'),
                      ('Characteristics;',         0x16,  ctypes.c_ushort,  '<H')]
         
_IMAGE_DOS_HEADER = [('e_magic',                    0x00,   ctypes.c_ushort, '<H'),
                     ('e_cblp',                     0x02,   ctypes.c_ushort, '<H'),
                     ('e_cp',                       0x04,   ctypes.c_ushort, '<H'),  
                     ('e_crlc',                     0x06,   ctypes.c_ushort, '<H'),
                     ('e_cparhdr',                  0x08,   ctypes.c_ushort, '<H'),
                     ('e_minalloc',                 0x0a,   ctypes.c_ushort, '<H'),
                     ('e_maxalloc',                 0x0c,   ctypes.c_ushort, '<H'),
                     ('e_ss',                       0x0e,   ctypes.c_ushort, '<H'),
                     ('e_sp',                       0x10,   ctypes.c_ushort, '<H'),
                     ('e_csum',                     0x12,   ctypes.c_ushort, '<H'),
                     ('e_ip',                       0x14,   ctypes.c_ushort, '<H'),
                     ('e_cs',                       0x16,   ctypes.c_ushort, '<H'),
                     ('e_lfarlc',                   0x18,   ctypes.c_ushort, '<H'),
                     ('e_ovno',                     0x1a,   ctypes.c_ushort, '<H'),
                     ('e_res[0]',                   0x1c,   ctypes.c_ushort, '<H'),
                     ('e_res[1]',                   0x1e,   ctypes.c_ushort, '<H'),
                     ('e_res[2]',                   0x20,   ctypes.c_ushort, '<H'),
                     ('e_res[3]',                   0x22,   ctypes.c_ushort, '<H'),
                     ('e_oemid',                    0x24,   ctypes.c_ushort, '<H'),
                     ('e_oeminfo',                  0x26,   ctypes.c_ushort, '<H'),
                     ('e_res2[0]',                  0x28,   ctypes.c_ushort, '<H'),
                     ('e_res2[1]',                  0x2a,   ctypes.c_ushort, '<H'),
                     ('e_res2[2]',                  0x2c,   ctypes.c_ushort, '<H'),
                     ('e_res2[3]',                  0x2e,   ctypes.c_ushort, '<H'),
                     ('e_res2[4]',                  0x30,   ctypes.c_ushort, '<H'),
                     ('e_res2[5]',                  0x32,   ctypes.c_ushort, '<H'),
                     ('e_res2[6]',                  0x34,   ctypes.c_ushort, '<H'),
                     ('e_res2[7]',                  0x36,   ctypes.c_ushort, '<H'),
                     ('e_res2[8]',                  0x38,   ctypes.c_ushort, '<H'),
                     ('e_res2[9]',                  0x3a,   ctypes.c_ushort, '<H'),
                     ('e_lfanew',                   0x3c,   ctypes.c_int32,  '<L')]

_IMAGE_OPTIONAL_HEADER = [('Magic;',                                                    0x00,   ctypes.c_ushort, '<H'),
                          ('MajorLinkerVersion;',                                       0x02,   ctypes.c_byte,   '<B'),
                          ('MinorLinkerVersion;',                                       0x03,   ctypes.c_byte,   '<B'),
                          ('SizeofCode;',                                               0x04,   ctypes.c_uint32, '<L'),
                          ('SizeOfInitializedData;',                                    0x08,   ctypes.c_uint32, '<L'),
                          ('SizeOfUninitializedData;',                                  0x0c,   ctypes.c_uint32, '<L'),
                          ('AddressOfEntryPoint;',                                      0x10,   ctypes.c_uint32, '<L'),
                          ('BaseOfCode;',                                               0x14,   ctypes.c_uint32, '<L'),
                          ('BaseOfDate;',                                               0x18,   ctypes.c_uint32, '<L'),
                          ('ImageBase;',                                                0x1c,   ctypes.c_uint32, '<L'),
                          ('SectionAlignment;',                                         0x20,   ctypes.c_uint32, '<L'),
                          ('FileAlignment;',                                            0x24,   ctypes.c_uint32, '<L'),
                          ('MajorOperatingSystemVersion;',                              0x28,   ctypes.c_ushort, '<H'),
                          ('MinorOperatingSystemVersion;',                              0x2a,   ctypes.c_ushort, '<H'),
                          ('MajorImageVersion;',                                        0x2c,   ctypes.c_ushort, '<H'),
                          ('MinorImageVersion;',                                        0x2e,   ctypes.c_ushort, '<H'),
                          ('MajorSubsystemVersion;',                                    0x30,   ctypes.c_ushort, '<H'),
                          ('MinorSubsystemVersion;',                                    0x32,   ctypes.c_ushort, '<H'),
                          ('Reserved1;',                                                0x34,   ctypes.c_uint32, '<L'),
                          ('SizeOfImage;',                                              0x38,   ctypes.c_uint32, '<L'),
                          ('SizeOfHeaders;',                                            0x3c,   ctypes.c_uint32, '<L'),
                          ('CheckSum;',                                                 0x40,   ctypes.c_uint32, '<L'),
                          ('Subsystem;',                                                0x44,   ctypes.c_ushort, '<H'),
                          ('DLLCharacteristics;',                                       0x46,   ctypes.c_ushort, '<H'),
                          ('SizeOfStackReserve;',                                       0x48,   ctypes.c_uint32, '<L'),
                          ('SizeOfStackCommit;',                                        0x4c,   ctypes.c_uint32, '<L'),
                          ('SizeOfHeapReserve;',                                        0x50,   ctypes.c_uint32, '<L'),
                          ('SizeOfHeapCommit;',                                         0x54,   ctypes.c_uint32, '<L'),
                          ('LoaderFlags;',                                              0x58,   ctypes.c_uint32, '<L'),
                          ('NumberOfRvaAndSizes;',                                      0x5c,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_EXPORT_TableVirtualAddress;',         0x60,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_EXPORT_Size;',                        0x64,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_IMPORT_VirtualAddress;',              0x68,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_IMPORT_Size;',                        0x6c,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_RESOURCE_TableVirtualAddress;',       0x70,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_RESOURCE_Size;',                      0x74,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_EXCEPTION_TableVirtualAddress;',      0x78,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_EXCEPTION_Size;',                     0x7c,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_SECURITY_TableVirtualAddress;',       0x80,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_SECURITY_Size;',                      0x84,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_BASERELOC_TableVirtualAddress;',      0x88,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_BASERELOC_Size;',                     0x8c,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_DEBUG_TableVirtualAddress;',          0x90,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_DEBUG_Size;',                         0x94,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_COPYRIGHT_TableVirtualAddress;',      0x98,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_COPYRIGHT_Size;',                     0x9c,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_GLOBALPTR_TableVirtualAddress;',      0xa0,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_GLOBALPTR_Size;',                     0xa4,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_TLS_TableVirtualAddress;',            0xa8,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_TLS_Size;',                           0xac,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG_TableVirtualAddress;',    0xb0,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG_Size;',                   0xb4,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT_TableVirtualAddress;',   0xb8,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT_Size;',                  0xbc,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_IAT_TableVirtualAddress;',            0xc0,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_IAT_Size;',                           0xc4,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT_TableVirtualAddress;',   0xc8,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT_Size;',                  0xc8,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR_TableVirtualAddress;', 0xd0,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR_IAT_Size;',            0xd4,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_RESERVED;',                           0xd8,   ctypes.c_uint32, '<L'),
                          ('IMAGE_DIRECTORY_ENTRY_RESERVED;',                           0xdc,   ctypes.c_uint32, '<L')]

_SECTION_HEADER = [   ('Name;',                     0,   ctypes.c_byte,       '<BBBBBBBB'),
                      ('VirtualSize;',              8,   ctypes.c_uint32,     '<L'),
                      ('VirtualAddress;',           12,  ctypes.c_uint32,     '<L'),
                      ('SizeOfRawData;',            16,  ctypes.c_uint32,     '<L'),
                      ('PointerToRawData;',         20,  ctypes.c_uint32,     '<L'),
                      ('PointerToRelocations;',     24,  ctypes.c_uint32,     '<L'),
                      ('PointerToLinenumbers;',     28,  ctypes.c_uint32,     '<L'),
                      ('NumberOfRelocations;',      32,  ctypes.c_ushort,     '<H'),
                      ('NumberOfLinenumbers;',      34,  ctypes.c_ushort,     '<H'),
                      ('Characteristics;',          36,  ctypes.c_uint32,     '<L')]

_SECTION_FLAG = [('IMAGE_SCN_TYPE_DSECT'),
                 ('MAGE_SCN_TYPE_NOLOAD'),
                 ('IMAGE_SCN_TYPE_GROUP'),
                 ('IMAGE_SCN_TYPE_NO_PAD'),
                 ('IMAGE_SCN_TYPE_COPY'),
                 ('IMAGE_SCN_CNT_CODE'),
                 ('IMAGE_SCN_CNT_INITIALIZED_DATA'),
                 ('IMAGE_SCN_CNT_UNINITIALIZED_DATA'),
                 ('IMAGE_SCN_LNK_OTHER'),
                 ('IMAGE_SCN_LNK_INFO'),
                 ('IMAGE_SCN_TYPE_OVER'),
                 ('IMAGE_SCN_LNK_REMOVE'),
                 ('IMAGE_SCN_LNK_COMDAT'),
                 ('RESERVED'),
                 ('RESERVED'),
                 ('IMAGE_SCN_MEM_FARDATA'),
                 ('RESERVED'),
                 ('IMAGE_SCN_MEM_PURGEABLE'),
                 ('IMAGE_SCN_MEM_LOCKED'),
                 ('IMAGE_SCN_MEM_PRELOAD'),
                 
                 ('ALIGNMENTSECTION'),
                 ('ALIGNMENTSECTION'),
                 ('ALIGNMENTSECTION'),
                 ('ALIGNMENTSECTION'),
                 
                 ('IMAGE_SCN_LNK_NRELOC_OVFL'),
                 ('IMAGE_SCN_MEM_DISCARDABLE'),
                 ('IMAGE_SCN_MEM_NOT_CACHED'),
                 ('IMAGE_SCN_MEM_NOT_PAGED'),
                 ('IMAGE_SCN_MEM_SHARED'),
                 ('IMAGE_SCN_MEM_EXECUTE'),
                 ('IMAGE_SCN_MEM_READ'),
                 ('IMAGE_SCN_MEM_WRITE')]


_ELF_SECTION_HEADER = [('Magic Number;'             ,   0,   ctypes.c_uint32,       'L'),
                   ('Class'                         ,   4,   ctypes.c_byte,         'B'),
                   ('Endianess'                     ,   5,   ctypes.c_byte,         'B'),
                   ('Version'                       ,   6,   ctypes.c_byte,         'B'),
                   ('e_ident'                       ,   7,   ctypes.c_byte,         'B'),
                   ('ABI Version'                   ,   8,   ctypes.c_byte,         'B'),
                   ('e_type'                        ,   16,  ctypes.c_ushort,       'H'),
                   ('e_machine'                     ,   18,  ctypes.c_ushort,       'H'),
                   ('e_version'                     ,   20,  ctypes.c_uint32,       'L'),
                   ('Entry Point'                   ,   24,  ctypes.c_uint32,       'L'),
                   ('Entry Program Headers'         ,   28,  ctypes.c_uint32,       'L'),
                   ('Entry Section Header'          ,   32,  ctypes.c_uint32,       'L'),
                   ('Flags'                         ,   36,  ctypes.c_uint32,       'L'),
                   ('Size of this header'           ,   40,  ctypes.c_ushort,       'H'),
                   ('Size of program header'        ,   42,  ctypes.c_ushort,       'H'),
                   ('Number of program headers'     ,   44,  ctypes.c_ushort,       'H'),
                   ('Size of Section header'        ,   46,  ctypes.c_ushort,       'H'),
                   ('Number of section headers'     ,   48,  ctypes.c_ushort,       'H'),
                   ('Section header string table'   ,   50,  ctypes.c_ushort,       'H')]

_SECTION_HEADER_INFO = [('Class',       1,          'ELF 32 Bit'),
                        ('Class',       2,          'ELF 64 Bit'),
                        ('Endianess',   1,          'Little Endian'),
                        ('Endianess',   2,          'Big Endian'),
                        ('Version',     1,          'Original Version'),
                        ('e_ident',     0x00,       'System V'),
                        ('e_ident',     0x01,       'HP-UX'),
                        ('e_ident',     0x02,       'NetBSD'),
                        ('e_ident',     0x03,       'Linux'),
                        ('e_ident',     0x06,       'Solaris'),
                        ('e_ident',     0x07,       'AIX'),
                        ('e_ident',     0x08,       'IRIX'),
                        ('e_ident',     0x09,       'FreeBSD'),
                        ('e_ident',     0x0C,       'OpenBSD'),
                        ('e_type',      1,          'relocatable'),
                        ('e_type',      2,          'executable'),
                        ('e_type',      3,          'shared'),
                        ('e_type',      4,          'core'),
                        ('e_machine',   0x02,       'SPARC'),
                        ('e_machine',   0x03,       'x86'),
                        ('e_machine',   0x08,       'MIPS'),
                        ('e_machine',   0x14,       'PowerPC'),
                        ('e_machine',   0x28,       'ARM'),
                        ('e_machine',   0x2A,       'SuperH'),
                        ('e_machine',   0x32,       'IA-64'),
                        ('e_machine',   0x3E,       'x86-64'),
                        ('e_machine',   0xB7,       'AArch64'),
                        ('e_version',   1 ,         'Original Version')]

_ELF_PROGRAM_HEADER = [('Type;',                0,   ctypes.c_uint32,   'L'),
                       ('Offset;',              4,   ctypes.c_uint32,   'L'),
                       ('Virtual Addr;',        8,   ctypes.c_uint32,   'L'),
                       ('Physical Addr;',       12,  ctypes.c_uint32,   'L'),
                       ('FileSize;',            16,  ctypes.c_uint32,   'L'),
                       ('MemorySize;',          20,  ctypes.c_uint32,   'L'),
                       ('Flags;',               24,  ctypes.c_uint32,   'L'),
                       ('Alignment;',           28,  ctypes.c_uint32,   'L')]

_ELF_PROGRAM_HEADER_64 = [('Type;',                0,   ctypes.c_uint32,   'L'),
                          ('Flags;',               4,   ctypes.c_uint32,   'L'),
                          ('Offset;',              8,   ctypes.c_uint64,   'Q'),
                          ('Virt Addr;',           16,  ctypes.c_uint64,   'Q'),
                          ('PAddr Reserved;',      24,  ctypes.c_uint64,   'Q'),
                          ('FileSize;',            32,  ctypes.c_uint64,   'Q'),
                          ('MemoreySize;',         40,  ctypes.c_uint64,   'Q'),
                          ('Alignment;',           48,  ctypes.c_uint64,   'Q')]

_ELF_PROGRAMHEADER_TYPE = [(0,               'NULL'         ),
                           (1,               'LOAD'         ),
                           (2,               'DYNAMIC'      ),
                           (3,               'INTERP'       ),
                           (4,               'NOTE'         ),
                           (5,               'SHLTB'        ),
                           (6,               'PHDR'         ),
                           (7,               'TLS'          ),
                           (1879048192,      'LORPOC'       ),
                           (2147483647,      'HIPROC'       ),
                           (1685382480,      'GNU_EH_FRAME' ),
                           (1685382481,      'GNU_STACK'    ),
                           (1685382482,      'GNU_RELRO'    ),
                           (1694766464,      'PAX_FLAGS'    ),]


_ELF_SECTIONHEADER = [ ('Name;',                0,   ctypes.c_uint32,   'L'),
                       ('Type;',                4,   ctypes.c_uint32,   'L'),
                       ('Flags;',               8,   ctypes.c_uint32,   'L'),
                       ('Virtual Addr;',        12,  ctypes.c_uint32,   'L'),
                       ('Offset;',              16,  ctypes.c_uint32,   'L'),
                       ('Size;',                20,  ctypes.c_uint32,   'L'),
                       ('Link;',                24,  ctypes.c_uint32,   'L'),
                       ('Info;',                28,  ctypes.c_uint32,   'L'),
                       ('Addralign;',           32,  ctypes.c_uint32,   'L'),
                       ('Entsize;',             36,  ctypes.c_uint32,   'L'),]

_ELF_SECTIONHEADER_64 = [   ('Name;',                0,   ctypes.c_uint32,   'L'),
                            ('Type;',                4,   ctypes.c_uint32,   'L'),
                            ('Flags;',               8,   ctypes.c_uint64,   'Q'),
                            ('Virtual Addr;',        16,  ctypes.c_uint64,   'Q'),
                            ('Offset;',              24,  ctypes.c_uint64,   'Q'),
                            ('Size;',                32,  ctypes.c_uint64,   'Q'),
                            ('Link;',                36,  ctypes.c_uint32,   'L'),
                            ('Info;',                40,  ctypes.c_uint32,   'L'),
                            ('Addralign;',           44,  ctypes.c_uint64,   'Q'),
                            ('Entsize;',             52,  ctypes.c_uint64,   'Q'),]

_ELF_SECTION_FLAGS = [ ('WRITE',                    'W'), 
                       ('ALLOC',                    'A'),
                       ('EXECUTE',                  'E'),
                       ('MASKPROC',                 'M'),
                       ('STRINGS',                  'S')]

_ELF_SECTION_HEADER_TYPE = [('NULL',        0),
                            ('GNU_HASH',    0x2),
                            ('PROGBITS',    1),
                            ('SYMTAB',      2),
                            ('STRTAB',      3),
                            ('RELA',        4),
                            ('HASH',        5),
                            ('DYNAMIC',     6),
                            ('NOTE',        7),
                            ('NOBITS',      8),
                            ('REL',         9),
                            ('SHLIB',       0xa),
                            ('DYNSYM',      0xb),
                            ('INIT_ARRAY',  0xe),
                            ('LOPROC',      0x70000000),
                            ('HIPROC',      0x7fffffff),
                            ('LOUSER',      0x80000000),
                            ('HIUSER',      0xffffffff),
                            ('VERSYM',      0x6fffffff),
                            ('VERNEED',     0x6ffffffe),]

_MACHO_HEADER_64 = [('Magic;',               0,   ctypes.c_uint32,      'L'),
                    ('Type;',                4,   ctypes.c_uint32,      'L'),
                    ('Subtype;',             8,   ctypes.c_uint32,      'L'),
                    ('Filetype;',            12,   ctypes.c_uint32,     'L'),
                    ('LoadCOmmandsNumber;',  16,   ctypes.c_uint32,     'L'),
                    ('SizeofCommands;',      20,   ctypes.c_uint32,     'L'),
                    ('Flags;',               24,   ctypes.c_uint32,     'L'),
                    ('Reserved;',            28,   ctypes.c_uint32,     'L'),]


_MACHO_HEADER_64_INFO = [('Magic;', 0xfeedfacf,       'MachO Magic 64'),
                         ('Magic;', 0xcffaedfe,       'MachO CIGAM 64'),
                         ('Magic;', 0xfeedface,       'MachO CIGAM 64'),
                         ('Magic;', 0xcefaedfe,       'MachO CIGAM 64'),
                         ('Filetype;', 0x1,       'Object'),
                         ('Filetype;', 0x2,       'Execute'),
                         ('Filetype;', 0x3,       'VM shared lib'),
                         ('Filetype;', 0x4,       'Core file'),
                         ('Filetype;', 0x5,       'Preload executable'),
                         ('Filetype;', 0x6,       'Dyanmic bound shared lib'),
                         ('Filetype;', 0x7,       'Dynamic link editor'),
                         ('Filetype;', 0x8,       'Dynamic bound bundle'),
                         ('Filetype;', 0x9,       'Shared lib stub'),
                         ('Filetype;', 0xa,       'Companion debug only'),
                         ('Filetype;', 0xb,       'x86_x64 kexts'),]
                                   
_MACHO_FLAGS = [       ('MH_NOUNDEFS',                          'the object file has no undefined references'), 
                       ('MH_INCRLINK',                          'Object file is output of increment link against base file'),
                       ('MH_DYLDLINK',                          'Object file is input for the dynamic linker'),
                       ('MH_BINDATLOAD',                        'Object file is undefined references are bound by dynamic linker when loaded'),
                       ('MH_PREBOUND',                          'The file has its dynamic undefined references prebound'),
                       ('MH_SPLIT_SEGS',                        'the file has its read-only and read-write segments split'),
                       ('MH_LAZY_INIT',                         'The shared libary init routine its to be run via chating memory faults '),
                       ('MH_TWOLEVEL',                          'the image is using two-level name space bindings'),
                       ('MH_FORCE_FLAT',                        'the executable is forcing all images to use flag name space bindings'),
                       ('MH_NOMULTIDEFS',                       'this umbrealla guarantees no multiple defintioins of symbols'),
                       ('MH_NOFIXPREBINDING',                   'do not have dyld notify the prebinding agent about this executable'),
                       ('MH_PREBINDABLE',                       'the binary is not prebound but can have its prebinding redone'),
                       ('MH_ALLMODSBOUND',                      'Indicates that this library binds to all two level namespaces modules of its dependent libraries'),
                       ('MH_SUBSECTIONS_VIA_SYMBOLS',           'safe to divide up the sections into sub-sections'),
                       ('MH_CANONICAL',                         'the binary has been canonicalized via unprebind operatino'),
                       ('MH_WEAK_DEFINES',                      'the final linked image contains external weak symbols'),
                       ('MH_BINDS_TO_WEAK',                     'the final linked image uses weak symbols.'), 
                       ('MH_ALLOW_STACK_EXECUTION',             'all stacks in the task will be given stack execution privilege'),
                       ('MH_ROOT_SAFE',                         'the binary declares it is safe for use in processes with uid zero'),
                       ('MH_SETUID_SAFE',                       'the binary declares it is safe for use in processes when itsetguid is true'),
                       ('MH_NO_REEXPORTED_DYLIBS',              'static linker does not ned to examine depent dylibs'),
                       ('MH_PIE',                               'OS will load the main executable at a random address'),
                       ('MH_DEAD_STRIPPABLE_DYLIB',             'static linker will automatically not create LC_LOAD_DYLIB'),
                       ('MH_HAS_TLV_DESCRIPTORS',               'Contains a section type S_THREAD_LOCAL_VARIABLES'),
                       ('MH_NO_HEAP_EXECUTION',                 'OS will run the main executable with a non-executable heap'), 
                       ('MH_APP_EXTENSION_SAFE',                'Code was linked for use in an application extension'),]
                 

_MACHO_LOADCOMMAND_TYPE = [('Command', 0x19,                'LC_SEGMENT_64'),
                           ('Command', 0x80000022,          'LC_DYLD_INFO_ONLY'),
                           ('Command', 0x2,                 'LC_SYMTAB'),
                           ('Command', 0xb,                 'LC_DYSYMTAB'),
                           ('Command', 0xe,                 'LC_LOAD_DYLINKER'),
                           ('Command', 0x1b,                'LC_UUID'),
                           ('Command', 0x24,                'LC_VERSION_MIN_MACOSX'),
                           ('Command', 0x80000028,          'LC_MAIN'),
                           ('Command', 0xc,                 'LC_LOAD_DYLIB'),
                           ('Command', 0x3,                 'LC_SYMSEG'),
                           ('Command', 0x4,                 'LC_THREAD'),
                           ('Command', 0x5,                 'LC_UNIXTHREAD'),
                           ('Command', 0x6,                 'LC_LOADFVMLIB'),
                           ('Command', 0x7,                 'LC_IDFVMLIB'),
                           ('Command', 0x8,                 'LC_IDENT'),
                           ('Command', 0x9,                 'LC_FVMFILE'),
                           ('Command', 0xa,                 'LC_PREPAGE'),
                           ('Command', 0xd,                 'LC_ID_DYLIB'),
                           ('Command', 0xf,                 'LC_ID_DYLINKER'),
                           ('Command', 0x10,                'LC_PREBOUND_DYLIB'),
                           ('Command', 0x11,                'LC_ROUTINES'),
                           ('Command', 0x12,                'LC_SUB_FRAMEWORK'),
                           ('Command', 0x13,                'LC_SUB_UMBRELLA'),
                           ('Command', 0x14,                'LC_SUB_CLIENT'),
                           ('Command', 0x15,                'LC_SUB_LIBRARY'),
                           ('Command', 0x16,                'LC_TWOLEVEL_HINTS'),
                           ('Command', 0x17,                'LC_PREBIND_CKSUM'),
                           ('Command', 0x1a,                'LC_ROUTINES_64'),
                           ('Command', 0x80000001c,         'LC_RPATH'),
                           ('Command', 0x1d,                'LC_CODE_SIGNATURE'),
                           ('Command', 0x1e,                'LC_SEGMENT_SPLIT_INFO'),
                           ('Command', 0x80000001f,         'LC_REEXPORT_DYLIB'),
                           ('Command', 0x800000018,         'LC_LOAD_WEAK_DYLIB'),
                           ('Command', 0x20,                'LC_LAZY_LOAD_DYLIB'),
                           ('Command', 0x21,                'LC_ENCRYPTION_INFO'),
                           ('Command', 0x22,                'LC_DYLD_INFO'),
                           ('Command', 0x800000022,         'LC_DYLD_INFO_ONLY'),
                           ('Command', 0x800000023,         'LC_LOAD_UPWARD_DYLIB'),
                           ('Command', 0x26,                'LC_FUNCTION_STARTS'),
                           ('Command', 0x27,                'LC_DYLD_ENVIRONMENT'),
                           ('Command', 0x29,                'LC_DATA_IN_CODE'),
                           ('Command', 0x2A,                'LC_SOURCE_VERSION'),
                           ('Command', 0x2B,                'LC_DYLIB_CODE_SIGN_DRS'),
                           ('Command', 0x2C,                'LC_ENCRYPTION_INFO_64'),
                           ('Command', 0x2D,                'LC_LINKER_OPTION'),
                           ('Command', 0x2E,                'LC_LINKER_OPTIMIZATION_HINT')]
                            
_MACHO_LC_SEGMENT_64 = [('VMaddr;',                 24,   ctypes.c_uint64,      'Q'),
                        ('VMsize;',                 32,   ctypes.c_uint64,      'Q'),
                        ('FileOffset;',             40,   ctypes.c_uint64,      'Q'),
                        ('FileSize;',               48,   ctypes.c_uint64,      'Q'),
                        ('MaxProt;',                56,   ctypes.c_uint32,      'L'),
                        ('InitProt;',               60,   ctypes.c_uint32,      'L'),
                        ('Nsects;',                 64,   ctypes.c_uint32,      'L'),
                        ('Flags;',                  68,   ctypes.c_uint32,      'L')]

_MACHO_LC_SYMTAB = [('SymbolTableOffset;',          8,    ctypes.c_uint32,      'L'),
                    ('NumberSymbols;',              12,   ctypes.c_uint32,      'L'),
                    ('StringTableOffset;',          16,   ctypes.c_uint32,      'L'),
                    ('StringTableSize;',            20,   ctypes.c_uint32,      'L')]

_MACHO_SYMTAB_STRUCT = [('StringTableIndex;',           0,    ctypes.c_uint32,      'L'),
                        ('Type;',                       4,    ctypes.c_uint32,      'L'),
                        ('SectionIndex;',               5,    ctypes.c_ubyte,       'B'),
                        ('Description;',                6,    ctypes.c_ushort,      'H'),
                        ('Value;',                      8,    ctypes.c_uint64,      'Q'),]


_MACHO_LC_DYSYMTAB = [('LocSymbolIndex;',               8,    ctypes.c_uint32,      'L'),
                      ('LocSymbolNumber;',              12,   ctypes.c_uint32,      'L'),
                      ('ExternalDefinedSymbolsIndex;',  16,   ctypes.c_uint32,      'L'),
                      ('ExternalDefinedSymbolNumber;',  20,   ctypes.c_uint32,      'L'),
                      ('UndefinedSymbolIndex;',         24,   ctypes.c_uint32,     'L'),
                      ('UndefinedSymbolNumber;',        28,   ctypes.c_uint32,      'L'),
                      ('TableOfContentsOffset;',        32,   ctypes.c_uint32,      'L'),
                      ('TableOfContentsEntryNumber;',   36,   ctypes.c_uint32,      'L'),
                      ('ModuleTableOffset;',            40,   ctypes.c_uint32,      'L'),
                      ('ModuleTableEntries;',           44,   ctypes.c_uint32,      'L'),
                      ('ReferencedSymbolTableOffset;',  48,   ctypes.c_uint32,      'L'),
                      ('ReferencedSymbolTableEntries;', 52,   ctypes.c_uint32,      'L'),
                      ('IndirectSymbolTableOffset;',    56,   ctypes.c_uint32,      'L'),
                      ('IndirectSymbolTableEntries;',   60,   ctypes.c_uint32,      'L'),
                      ('ExternalRelocationOffset;',     64,   ctypes.c_uint32,      'L'),
                      ('ExternalRelocationEntries;',    68,   ctypes.c_uint32,      'L'),
                      ('LocalRelocationTableOffset;',   72,   ctypes.c_uint32,      'L'),
                      ('LocalRelocationTableEntries;',  76,   ctypes.c_uint32,      'L')]

_MACHO_LC_LOAD_DYLIB = [    ('StrOffset;',              8,   ctypes.c_uint32,       'L'),
                            ('TimeStamp;',              12,   ctypes.c_uint32,      'L'),
                            ('CurrentVersion;',         16,   ctypes.c_uint32,      'L'),
                            ('CompatibilityVersion;',   20,   ctypes.c_uint32,      'L')]
                            
_MACHO_LC_DYLD_INFO_ONLY = [('RebaseOffset;',           8,   ctypes.c_uint32,       'L'),
                            ('RebaseSize;',             12,   ctypes.c_uint32,      'L'),
                            ('BindOffset;',             16,   ctypes.c_uint32,      'L'),
                            ('BindSize;',               20,   ctypes.c_uint32,      'L'),
                            ('WeakBindOffset;',         24,   ctypes.c_uint32,      'L'),
                            ('WeakBindSize;',           28,   ctypes.c_uint32,      'L'),
                            ('LazyBindOffset;',         32,   ctypes.c_uint32,      'L'),
                            ('LazyBindSize;',           36,   ctypes.c_uint32,      'L'),
                            ('ExportOffset;',           40,   ctypes.c_uint32,      'L'),
                            ('ExportSize;',             44,   ctypes.c_uint32,      'L'),]

_MACHO_LC_VERSION_MIN_MACOSX = [('Version;',           8,   ctypes.c_uint32,        'L'),
                                ('Reserved;',          12,  ctypes.c_uint32,        'L'),]

_MACHO_LC_MAIN = [('EntryOffset;',           8,   ctypes.c_uint32,      'L'),
                  ('StackSize;',            12,   ctypes.c_uint32,      'L'),]

_MACHO_LC_LINKEDIT_DATA_COMMAND = [('DataOffset;',          8,   ctypes.c_uint32,      'L'),
                                   ('DataSize;',            12,  ctypes.c_uint32,      'L'),]


_MACHO_DESCPITION_FLAGS = [        ('REFERENCE_FLAG_UNDEFINED_NON_LAZY',                          'the object file has no undefined references'), 
                                   ('REFERENCE_FLAG_UNDEFINED_LAZY',                          'Object file is output of increment link against base file'),
                                   ('REFERENCE_FLAG_DEFINED',                          'Object file is input for the dynamic linker'),
                                   ('REFERENCE_FLAG_PRIVATE_DEFINED',                        'Object file is undefined references are bound by dynamic linker when loaded'),
                                   ('REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY',                          'The file has its dynamic undefined references prebound'),
                                   ('REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY',                        'the file has its read-only and read-write segments split'),
                                   ('REFERENCED_DYNAMICALLY ',                         'The shared libary init routine its to be run via chating memory faults '),
                                   ('N_DESC_DISCARDED ',                          'the image is using two-level name space bindings'),
                                   ('N_WEAK_REF',                        'the executable is forcing all images to use flag name space bindings'),
                                   ('N_WEAK_DEF',                       'this umbrealla guarantees no multiple defintioins of symbols')]